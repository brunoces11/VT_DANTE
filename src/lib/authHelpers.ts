// Verifica√ß√£o REAL e DIRETA de email no banco Supabase
import { supabase } from './supabase';

// Fun√ß√£o CORRETA para verificar se email j√° existe
export const checkEmailExists = async (email: string): Promise<{ exists: boolean; error?: string }> => {
  try {
    console.log('üîç [checkEmailExists] Verificando email:', email);
    
    // Normalizar email
    const normalizedEmail = email.toLowerCase().trim();
    console.log('üìß [checkEmailExists] Email normalizado:', normalizedEmail);
    
    // M√âTODO CORRETO: Usar RPC function que consulta auth.users diretamente
    const { data, error } = await supabase.rpc('check_email_exists', {
      email_to_check: normalizedEmail
    });
    
    if (error) {
      console.error('‚ùå [checkEmailExists] Erro na consulta RPC:', error);
      return { exists: false, error: `Erro ao verificar email: ${error.message}` };
    }
    
    console.log('üìä [checkEmailExists] Resultado da consulta:', data);
    
    // data ser√° true se email existe, false se n√£o existe
    const emailExists = Boolean(data);
    
    console.log(`${emailExists ? '‚ùå' : '‚úÖ'} [checkEmailExists] Email ${emailExists ? 'J√Å EXISTE' : 'DISPON√çVEL'}`);
    
    return { exists: emailExists };
    
  } catch (error) {
    console.error('‚ùå [checkEmailExists] Erro inesperado:', error);
    return { exists: false, error: 'Erro interno ao verificar email' };
  }
};

// Fun√ß√£o para testar um email espec√≠fico (para debug)
export const testSpecificEmail = async (email: string) => {
  console.log(`üß™ [testSpecificEmail] Testando email: ${email}`);
  const result = await checkEmailExists(email);
  console.log(`üß™ [testSpecificEmail] Resultado:`, result);
  return result;
};

// Fun√ß√£o auxiliar para limpar sess√µes indesejadas (mantida para compatibilidade)
export const cleanupTempSession = async () => {
  try {
    const { data: { session } } = await supabase.auth.getSession();
    if (session?.user?.user_metadata?.verification_check || 
        session?.user?.user_metadata?.temp_user) {
      console.log('üßπ Removendo sess√£o tempor√°ria de verifica√ß√£o...');
      await supabase.auth.signOut();
    }
  } catch (error) {
    console.log('‚ö†Ô∏è Erro ao limpar sess√£o tempor√°ria:', error);
  }
};